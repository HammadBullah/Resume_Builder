import 'package:flutter/material.dart';

class InterviewPreparationScreen extends StatefulWidget {
  const InterviewPreparationScreen({super.key});

  @override
  _InterviewPreparationScreenState createState() =>
      _InterviewPreparationScreenState();
}

class _InterviewPreparationScreenState
    extends State<InterviewPreparationScreen> {
  // Questions and Answers organized by topics
  final Map<String, List<String>> _content = {
    'Algorithms': [
      'Q1. What is the time complexity of Bubble Sort?',
      'O(n^2)',
      'Q2. How does Quick Sort work?',
      'Quick Sort is a divide-and-conquer algorithm that selects a pivot element, partitions the array around it, and recursively sorts the subarrays.',
      'Q3. What is the difference between BFS and DFS?',
      'BFS (Breadth-First Search) traverses a graph level by level, while DFS (Depth-First Search) traverses a graph by exploring as far as possible along each branch before backtracking.',
      'Q4. Explain Dynamic Programming.',
      'Dynamic Programming is a method for solving complex problems by breaking them down into simpler subproblems and storing the results of these subproblems to avoid redundant computations.',
      'Q5. What is a greedy algorithm?',
      'A greedy algorithm is an approach that makes the locally optimal choice at each stage with the hope of finding a global optimum.',
      'Q6. Define NP-hard and NP-complete problems.',
      'NP-hard problems are at least as hard as the hardest problems in NP, while NP-complete problems are both NP-hard and in NP.',
      'Q7. Describe Dijkstra\'s algorithm.',
      'Dijkstra\'s algorithm is used to find the shortest path from a source node to all other nodes in a weighted graph.',
      'Q8. Explain Big-O notation.',
      'Big-O notation is used to describe the upper bound of the time or space complexity of an algorithm in the worst-case scenario.',
      'Q9. What is the Travelling Salesman Problem (TSP)?',
      'TSP is a classic optimization problem where a salesman seeks to find the shortest route that allows them to visit each city exactly once and return to the origin city.',
      'Q10. How does Merge Sort work?',
      'Merge Sort is a divide-and-conquer algorithm that divides the array into two halves, sorts each half recursively, and then merges the sorted halves.',
      'Q11. Explain the concept of recursion.',
      'Recursion is a programming technique where a function calls itself directly or indirectly to solve a problem.',
      'Q12. What is the Knapsack problem?',
      'The Knapsack problem is a combinatorial optimization problem where the goal is to maximize the total value of items in a knapsack without exceeding its capacity.',
      'Q13. What is an AVL tree?',
      'An AVL tree is a self-balancing binary search tree where the height difference between left and right subtrees cannot be more than one for all nodes.',
      'Q14. How does Breadth-First Search (BFS) work?',
      'BFS explores all neighbor nodes at the present depth prior to moving on to nodes at the next depth level.',
      'Q15. Explain the concept of divide and conquer.',
      'Divide and conquer is an algorithm design paradigm where you break down a problem into smaller subproblems, solve them recursively, and then combine their solutions to solve the original problem.',
      'Q16. What is Bellman-Ford algorithm used for?',
      'Bellman-Ford algorithm is used to find the shortest paths from a single source vertex to all other vertices in a weighted graph.',
      'Q17. How does the A* search algorithm work?',
      'A* search algorithm is a graph traversal and path search algorithm that finds a path with the lowest cost (shortest path) between a given initial node and a goal node.',
      'Q18. Explain the concept of hashing.',
      'Hashing is the process of mapping data of arbitrary size to data of a fixed size. It is used to index and retrieve items in a database quickly.',
      'Q19. What is the significance of a priority queue?',
      'A priority queue is an abstract data type that operates like a regular queue or stack but where additionally each element has a "priority" associated with it. In a priority queue, an element with high priority is served before an element with low priority.',
      'Q20. Describe the Boyer-Moore algorithm.',
      'The Boyer-Moore algorithm is an efficient string searching algorithm that is used to find occurrences of a pattern within a string.',
      // Add more questions and answers as needed
    ],
    'Data Structures': [
      'Q51. What is a Stack and how is it implemented?',
      'A Stack is a Last-In-First-Out (LIFO) data structure that can be implemented using an array or a linked list.',
      'Q52. How does a Hash Table work?',
      'A Hash Table uses a hash function to map keys to indices of a backing array, allowing for fast lookups and insertions.',
      'Q53. What is the difference between a Linked List and an Array?',
      'A Linked List is a dynamic data structure that consists of nodes that point to each other, while an Array is a static data structure that stores elements in contiguous memory locations.',
      'Q54. Explain the concept of a Queue.',
      'A Queue is a First-In-First-Out (FIFO) data structure where elements are inserted at the back and removed from the front.',
      'Q55. How does a Binary Search Tree (BST) work?',
      'A Binary Search Tree is a binary tree data structure where each node has at most two children, and the left child contains only nodes with values less than the parent node, while the right child only contains nodes with values greater than or equal to the parent node.',
      'Q56. What is the purpose of a Heap?',
      'A Heap is a specialized tree-based data structure that satisfies the heap property (either min-heap or max-heap). It is commonly used to implement priority queues.',
      'Q57. Describe the concept of a Trie.',
      'A Trie (prefix tree) is a tree-like data structure used for storing a dynamic set of strings where each node represents a common prefix of many strings.',
      'Q58. Explain the concept of a Graph.',
      'A Graph is a non-linear data structure consisting of nodes (vertices) and edges (connections between nodes). Graphs are used to represent networks of communication, data organization, computational devices, etc.',
      'Q59. What is the significance of a doubly linked list?',
      'A Doubly Linked List is a linked data structure that consists of a set of sequentially linked records called nodes. Each node contains two fields, called links, that are references to the previous and next nodes in the sequence of nodes.',
      'Q60. Describe the Radix Sort algorithm.',
      'Radix Sort is a non-comparative integer sorting algorithm that sorts data with integer keys by grouping keys by the individual digits which share the same significant position and value.',
      'Q61. What are some advantages of using a balanced tree data structure?',
      'Balanced tree data structures like AVL trees and Red-Black trees provide guaranteed worst-case performance for insertion, deletion, and search operations, making them suitable for applications where predictable performance is critical.',
      'Q62. Explain the concept of a sparse matrix.',
      'A Sparse Matrix is a matrix in which most of the elements are zero. In the context of data structures, it is represented using a linked list or a 2D array with a special data structure optimized for memory usage.',
      'Q63. What is the purpose of a circular linked list?',
      'A Circular Linked List is a linked list where the last node points back to the first node. It can be used to implement a round-robin scheduling algorithm or maintain a circular buffer.',
      'Q64. Describe the concept of a B-tree.',
      'A B-tree is a self-balancing tree data structure that maintains sorted data and allows for efficient search, insertion, and deletion operations. It is commonly used in databases and filesystems.',
      'Q65. How does the Shell Sort algorithm work?',
      'Shell Sort is a generalization of insertion sort that allows the exchange of items that are far apart. It sorts pairs of elements far apart from each other and then progressively reduces the gap between elements to be compared.',
      'Q66. Explain the concept of a self-balancing tree.',
      'A self-balancing tree is a tree data structure that automatically maintains its height to ensure fast search, insert, and delete operations. Examples include AVL trees and Red-Black trees.',
      'Q67. What is the purpose of a priority queue?',
      'A priority queue is an abstract data type that operates like a regular queue or stack but where additionally each element has a "priority" associated with it. In a priority queue, an element with high priority is served before an element with low priority.',
      'Q68. Describe the Boyer-Moore algorithm.',
      'The Boyer-Moore algorithm is an efficient string searching algorithm that is used to find occurrences of a pattern within a string.',
      'Q69. How does the A* search algorithm work?',
      'A* search algorithm is a graph traversal and path search algorithm that finds a path with the lowest cost (shortest path) between a given initial node and a goal node.',
      'Q70. Explain the concept of hashing.',
      'Hashing is the process of mapping data of arbitrary size to data of a fixed size. It is used to index and retrieve items in a database quickly.',
      // Add more questions and answers as needed
    ],
    'Computer Networks': [
      'Q101. What is the OSI model?',
      'The OSI (Open Systems Interconnection) model is a conceptual framework used to understand and describe network protocols and interactions. It defines seven layers: Physical, Data Link, Network, Transport, Session, Presentation, and Application.',
      'Q102. How does TCP/IP work?',
      'TCP/IP (Transmission Control Protocol/Internet Protocol) is the suite of communication protocols used for transmitting data over the internet. TCP ensures reliable delivery of data, while IP handles addressing and routing.',
      'Q103. What is the difference between a Hub and a Switch?',
      'A Hub is a simple networking device that broadcasts data to all devices on a network, while a Switch is more intelligent and forwards data only to the intended device.',
      'Q104. What is DNS (Domain Name System) and how does it work?',
      'DNS is a hierarchical decentralized naming system for computers, services, or other resources connected to the internet or a private network. It translates domain names to IP addresses needed for locating computer services and devices worldwide.',
      'Q105. Describe the concept of IP addressing.',
      'IP addressing is the method used to assign addresses to devices connected to a network. It provides a way for devices to communicate with each other and across networks using unique numerical addresses.',
      'Q106. What is DHCP (Dynamic Host Configuration Protocol)?',
      'DHCP is a network management protocol used to automatically assign IP addresses and other network configuration parameters to devices on a network.',
      'Q107. Explain the difference between TCP and UDP.',
      'TCP (Transmission Control Protocol) is a connection-oriented protocol that provides reliable and ordered delivery of data, while UDP (User Datagram Protocol) is a connectionless protocol that delivers data without guarantees regarding order or reliability.',
      'Q108. What is ARP (Address Resolution Protocol)?',
      'ARP is a protocol used to map IP addresses to MAC addresses on a local network. It resolves IP addresses to MAC addresses required for packet delivery within a network segment.',
      'Q109. How does NAT (Network Address Translation) work?',
      'NAT is a process used in routers to modify IP address information in IP packet headers while they are in transit across a traffic routing device. It enables multiple devices on a LAN to share a single public IP address.',
      'Q110. Describe the concept of a VLAN (Virtual Local Area Network).',
      'A VLAN is a logical group of devices that behave as if they are on their independent network, even if they share a common infrastructure with other VLANs.',
      'Q111. What is a subnet mask?',
      'A subnet mask is a 32-bit number that identifies the network portion of an IP address by masking the portion of the IP address that represents the host.',
      'Q112. Explain the concept of network security.',
      'Network security refers to the policies, practices, and technologies used to protect data, devices, and networks from unauthorized access, misuse, modification, or destruction.',
      'Q113. What is the purpose of a router in a network?',
      'A router is a networking device that forwards data packets between computer networks. It connects different networks and routes data to its destination along the most efficient path.',
      'Q114. Describe the concept of a firewall.',
      'A firewall is a network security system that monitors and controls incoming and outgoing network traffic based on predetermined security rules. It acts as a barrier between a trusted internal network and untrusted external networks.',
      'Q115. What is the role of ICMP (Internet Control Message Protocol)?',
      'ICMP is a protocol used to send error messages and operational information indicating success or failure when communicating with another IP address. It is commonly used in diagnostic tools such as ping and traceroute.',
      'Q116. Explain the concept of network topology.',
      'Network topology refers to the layout pattern of interconnections of nodes (devices) in a computer network. Common topologies include bus, star, ring, mesh, and hybrid topologies.',
      'Q117. What is the difference between half-duplex and full-duplex communication?',
      'In half-duplex communication, data can flow in both directions, but not at the same time. In full-duplex communication, data can flow in both directions simultaneously.',
      'Q118. How does SSL/TLS work?',
      'SSL (Secure Sockets Layer) and TLS (Transport Layer Security) are cryptographic protocols that provide secure communication over a computer network. They establish an encrypted link between a web server and a browser, ensuring data integrity and confidentiality.',
      'Q119. Describe the concept of HTTP and HTTPS.',
      'HTTP (Hypertext Transfer Protocol) is the foundation of data communication on the World Wide Web, while HTTPS (HTTP Secure) is the secure version of HTTP that uses SSL/TLS to encrypt data.',
      'Q120. What is the purpose of DHCP (Dynamic Host Configuration Protocol)?',
      'DHCP is a network management protocol used to automatically assign IP addresses and other network configuration parameters to devices on a network.',
      // Add more questions and answers as needed
    ],
    'Database Management': [
      'Q151. What is a Database and how is it used?',
      'A Database is an organized collection of data, typically stored and accessed electronically from a computer system. It is used to store, retrieve, and manage data efficiently.',
      'Q152. How does SQL (Structured Query Language) work?',
      'SQL is a domain-specific language used for managing relational databases. It allows users to query, manipulate, and manage data in databases.',
      'Q153. What is the difference between a Relational Database and a NoSQL Database?',
      'A Relational Database organizes data into tables with predefined relationships between them, while a NoSQL Database stores and retrieves data in ways other than the tabular relations used in relational databases.',
      'Q154. What is ACID in the context of database transactions?',
      'ACID (Atomicity, Consistency, Isolation, Durability) is a set of properties that guarantee that database transactions are processed reliably. Atomicity ensures that all operations in a transaction are completed as a single unit. Consistency ensures that a transaction brings the database from one valid state to another. Isolation ensures that the concurrent execution of transactions results in a system state that would be obtained if transactions were executed sequentially. Durability ensures that once a transaction is committed, it remains committed even in the case of a system failure.',
      'Q155. Explain the concept of normalization in databases.',
      'Normalization is the process of organizing data in a database to reduce redundancy and improve data integrity. It involves dividing large tables into smaller tables and defining relationships between them.',
      'Q156. What are some advantages of using indexes in databases?',
      'Indexes in databases improve query performance by allowing the database server to quickly retrieve specific rows from a table.',
      'Q157. Describe the concept of a primary key in a database table.',
      'A primary key is a unique identifier for each record in a database table. It ensures that each record can be uniquely identified and accessed quickly.',
      'Q158. How does data replication work in databases?',
      'Data replication is the process of copying and maintaining data in multiple databases to ensure consistency, fault tolerance, and availability. It can be synchronous or asynchronous depending on the replication method used.',
      'Q159. What is the role of a database administrator (DBA)?',
      'A database administrator (DBA) is responsible for the design, implementation, maintenance, and repair of an organization\'s database management systems. They ensure the security, integrity, and performance of databases.',
      'Q160. Explain the concept of data warehousing.',
      'Data warehousing is the process of collecting, storing, and organizing data from various sources to support business decision-making processes. It involves creating a central repository of integrated data for analysis and reporting.',
      'Q161. What are some common types of database backups?',
      'Common types of database backups include full backups (complete backup of the entire database), differential backups (backup of changes since the last full backup), and incremental backups (backup of changes since the last backup, whether full or incremental).',
      'Q162. Describe the concept of data mining in databases.',
      'Data mining is the process of discovering patterns, correlations, and trends in large datasets to extract useful information and knowledge. It involves applying statistical and machine learning techniques to analyze and interpret data.',
      'Q163. What is the role of SQL joins in database queries?',
      'SQL joins are used to combine rows from two or more tables based on a related column between them. They enable querying and retrieving data from multiple tables simultaneously.',
      'Q164. Explain the concept of database partitioning.',
      'Database partitioning is the process of dividing a large database table into smaller, more manageable parts called partitions. It improves query performance, data availability, and scalability by distributing data across multiple storage devices.',
      'Q165. What is the purpose of database transactions?',
      'Database transactions ensure data integrity and consistency by grouping multiple database operations into a single unit of work. They either complete entirely or have no effect (atomicity), maintain the database in a valid state (consistency), operate independently of other transactions (isolation), and permanently save changes to the database (durability).',
      'Q166. Describe the concept of data compression in databases.',
      'Data compression in databases reduces the storage space required for data by encoding information using fewer bits. It improves storage efficiency and reduces data transfer times over networks.',
      'Q167. What are some factors to consider when designing a database schema?',
      'When designing a database schema, factors to consider include data integrity, performance, scalability, normalization, relationships between entities (tables), indexing, security requirements, and future data growth.',
      'Q168. Explain the concept of database triggers.',
      'Database triggers are procedural code that automatically executes in response to certain events on a particular table or view in a database. They can enforce business rules, maintain referential integrity, and log changes.',
      'Q169. What is the role of ACID properties in database transactions?',
      'ACID (Atomicity, Consistency, Isolation, Durability) properties ensure that database transactions are processed reliably. Atomicity ensures that all operations in a transaction are completed as a single unit. Consistency ensures that a transaction brings the database from one valid state to another. Isolation ensures that the concurrent execution of transactions results in a system state that would be obtained if transactions were executed sequentially. Durability ensures that once a transaction is committed, it remains committed even in the case of a system failure.',
      'Q170. Describe the concept of database views.',
      'Database views are virtual tables generated dynamically based on the result of a query. They allow users to access and manipulate specific data without directly altering the underlying database schema.',
      // Add more questions and answers as needed
    ],
    'Operating Systems': [
      'Q201. What is an Operating System (OS)?',
      'An Operating System is system software that manages computer hardware, software resources, and provides common services for computer programs.',
      'Q202. Describe the role of the Kernel in an Operating System.',
      'The Kernel is the core component of an Operating System that provides essential services, such as memory management, process management, device management, and system calls.',
      'Q203. What are the different types of Operating Systems?',
      'Operating Systems can be categorized into several types, including Real-time Operating Systems, Multi-user and Single-user Operating Systems, Distributed Operating Systems, and Embedded Operating Systems.',
      'Q204. Explain the concept of Virtual Memory.',
      'Virtual Memory is a memory management technique used by Operating Systems to provide an illusion of a larger memory space than physically available. It uses paging and swapping to move data between RAM and storage.',
      'Q205. What is the purpose of Process Scheduling in Operating Systems?',
      'Process Scheduling is the activity of selecting the next process to be executed by the CPU. It ensures efficient CPU utilization and fair allocation of resources.',
      'Q206. Describe the concept of Deadlock in Operating Systems.',
      'Deadlock is a situation where two or more processes are unable to proceed because each is waiting for the other to release a resource.',
      'Q207. How does File System Management work in Operating Systems?',
      'File System Management is the process of organizing and managing files and directories stored on storage devices. It includes file allocation, naming conventions, access control, and data retrieval.',
      'Q208. Explain the role of Device Drivers in an Operating System.',
      'Device Drivers are software programs that allow the Operating System to communicate with hardware devices. They facilitate interaction between applications and hardware components.',
      'Q209. What are the different types of File Systems?',
      'Common types of File Systems include FAT (File Allocation Table), NTFS (New Technology File System), ext4 (Fourth Extended File System), and HFS+ (Hierarchical File System Plus). Each type has its own features and optimizations for specific use cases.',
      'Q210. Describe the concept of Virtualization in Operating Systems.',
      'Virtualization is the process of creating a virtual (rather than actual) version of something, such as hardware platforms, operating systems, storage devices, or network resources. It allows multiple Operating Systems or applications to run simultaneously on a single physical machine.',
      'Q211. What is the purpose of System Calls in Operating Systems?',
      'System Calls are programming interfaces provided by the Operating System that allow user-level processes to request services from the Kernel, such as process management, file operations, and communication.',
      'Q212. Explain the concept of Paging in Virtual Memory.',
      'Paging is a memory management scheme that allows the Operating System to store and retrieve data in fixed-size blocks (pages) from secondary storage (usually disk) to main memory (RAM). It helps in efficient memory allocation and management.',
      'Q213. What is the difference between Multiprogramming and Multitasking?',
      'Multiprogramming involves running multiple programs on a single processor by interleaving the execution of different programs. Multitasking involves running multiple tasks or processes concurrently on a computer system.',
      'Q214. Describe the concept of Semaphore in Operating Systems.',
      'A Semaphore is a synchronization construct used to control access to a common resource in a concurrent system. It ensures that only one process or thread accesses the resource at a time.',
      'Q215. How does Memory Management work in Operating Systems?',
      'Memory Management is the process of managing computer memory to ensure that each process receives enough memory to execute efficiently and that unused memory is reclaimed and made available for other processes.',
      'Q216. Explain the concept of RAID (Redundant Array of Independent Disks).',
      'RAID is a data storage virtualization technology that combines multiple physical disk drive components into one or more logical units for data redundancy, performance improvement, or both.',
      'Q217. What are the advantages and disadvantages of Monolithic Kernels?',
      'Monolithic Kernels provide better performance and direct access to hardware resources but are less modular and harder to extend or modify compared to Microkernels.',
      'Q218. Describe the concept of Thrashing in Operating Systems.',
      'Thrashing occurs when a computer\'s virtual memory system is in a constant state of paging, rapidly exchanging data in memory for data on disk, to the exclusion of most application-level processing.',
      'Q219. How does Multithreading improve performance in Operating Systems?',
      'Multithreading allows multiple threads of execution to run concurrently within the same process. It improves performance by utilizing multiple CPU cores and reducing the overhead associated with creating and managing processes.',
      'Q220. What is the role of a Shell in Operating Systems?',
      'A Shell is a command-line interpreter that allows users to interact with the Operating System by executing commands. It provides an interface for users to run programs, manipulate files, and manage system resources.',
      // Add more questions and answers as needed
    ],

    'Software Engineering': [
      'Q251. What is Software Engineering?',
      'Software Engineering is the systematic application of engineering principles, methods, and tools to develop software systems. It involves designing, building, testing, and maintaining software to meet specific requirements and quality standards.',
      'Q252. Describe the Software Development Life Cycle (SDLC).',
      'The Software Development Life Cycle is a process used by software development teams to design, develop, test, and deploy software applications. It typically includes stages such as requirements gathering, design, implementation, testing, deployment, and maintenance.',
      'Q253. What are the different Software Development Methodologies?',
      'Common Software Development Methodologies include Waterfall, Agile (Scrum, Kanban), Lean, Spiral, and DevOps. Each methodology defines a set of practices, principles, and processes for managing and delivering software projects.',
      'Q254. Explain the concept of Object-Oriented Programming (OOP).',
      'Object-Oriented Programming is a programming paradigm based on the concept of "objects," which can contain data in the form of fields (attributes or properties) and code in the form of procedures (methods or functions). It allows for modular and reusable code, as well as modeling real-world entities.',
      'Q255. What are some advantages of using version control systems?',
      'Version control systems (VCS) track changes to files over time, allowing developers to collaborate, revert to previous versions, track changes, and manage different versions of software projects.',
      'Q256. Describe the concept of Software Testing.',
      'Software Testing is the process of evaluating a software application to ensure that it meets specified requirements and functions correctly. It involves executing software under controlled conditions and comparing actual results with expected results.',
      'Q257. What is the purpose of Software Documentation?',
      'Software Documentation provides information about the software system to stakeholders, developers, and users. It includes requirements documents, design documents, user manuals, API documentation, and technical specifications.',
      'Q258. Explain the concept of Refactoring in Software Engineering.',
      'Refactoring is the process of restructuring existing code without changing its external behavior to improve readability, maintainability, and efficiency. It involves simplifying complex code, eliminating redundancy, and improving design patterns.',
      'Q259. What are some common Software Design Patterns?',
      'Common Software Design Patterns include Singleton, Factory, Observer, Strategy, and MVC (Model-View-Controller). Design patterns provide proven solutions to commonly occurring design problems in software development.',
      'Q260. Describe the concept of Continuous Integration (CI) and Continuous Deployment (CD).',
      'Continuous Integration (CI) is the practice of regularly merging code changes from multiple contributors into a central repository, followed by automated builds and tests. Continuous Deployment (CD) extends CI by automatically deploying code changes to production environments after passing automated tests.',
      // Add more questions and answers as needed
    ],
    'Artificial Intelligence': [
      'Q301. What is Artificial Intelligence (AI)?',
      'Artificial Intelligence is the simulation of human intelligence processes by machines, especially computer systems. It includes learning, reasoning, problem-solving, perception, and language understanding.',
      'Q302. Explain the difference between Machine Learning and Deep Learning.',
      'Machine Learning is a subset of Artificial Intelligence that involves training algorithms to learn patterns from data and make predictions or decisions. Deep Learning is a subset of Machine Learning that uses neural networks with multiple layers (deep neural networks) to learn from large amounts of data.',
      'Q303. What are some popular Machine Learning algorithms?',
      'Popular Machine Learning algorithms include Linear Regression, Logistic Regression, Decision Trees, Random Forests, Support Vector Machines (SVM), K-Nearest Neighbors (KNN), and Neural Networks.',
      'Q304. Describe the concept of Natural Language Processing (NLP).',
      'Natural Language Processing is a branch of Artificial Intelligence that enables computers to understand, interpret, and generate human language. It involves tasks such as text classification, sentiment analysis, language translation, and speech recognition.',
      'Q305. What is the role of Neural Networks in Artificial Intelligence?',
      'Neural Networks are a fundamental component of Deep Learning and Artificial Intelligence. They are mathematical models inspired by the human brain that can learn complex patterns and relationships from data.',
      'Q306. Explain the concept of Reinforcement Learning.',
      'Reinforcement Learning is a type of Machine Learning where an agent learns to make decisions by interacting with an environment. It receives feedback in the form of rewards or penalties for its actions, allowing it to learn optimal behavior over time.',
      'Q307. What are the advantages and disadvantages of using Artificial Intelligence?',
      'Advantages of Artificial Intelligence include automation of repetitive tasks, improved decision-making, greater efficiency, and new opportunities for innovation. Disadvantages include potential job displacement, ethical concerns, complexity, and dependency on data quality.',
      'Q308. Describe the concept of Computer Vision.',
      'Computer Vision is a field of Artificial Intelligence that enables computers to interpret and understand visual information from the world, such as images and videos. It involves tasks such as object detection, image classification, and image segmentation.',
      'Q309. How does AI impact industries such as healthcare, finance, and transportation?',
      'AI has significant impacts on industries by enabling personalized medicine and diagnostics in healthcare, algorithmic trading and fraud detection in finance, and autonomous vehicles and route optimization in transportation, among other applications.',
      'Q310. Explain the concept of Generative Adversarial Networks (GANs).',
      'Generative Adversarial Networks (GANs) are a type of neural network architecture used in unsupervised learning. They consist of two networks, a generator and a discriminator, which compete against each other to generate realistic data (e.g., images, text) and distinguish between real and generated data.',
      'Q311. What are some ethical considerations in the development and deployment of AI?',
      'Ethical considerations in AI include issues of fairness and bias in algorithms, privacy concerns regarding data collection and usage, accountability and transparency in decision-making processes, and the impact of AI on employment and society.',
      'Q312. Describe the concept of Transfer Learning in Machine Learning.',
      'Transfer Learning is a Machine Learning technique where a model trained on one task is re-purposed or fine-tuned on a second related task. It allows models to leverage knowledge learned from large datasets or domains to improve performance on new tasks with smaller datasets.',
      'Q313. What are some challenges faced in the development of AI systems?',
      'Challenges in AI development include the need for large and high-quality datasets, ensuring model interpretability and transparency, mitigating bias and fairness issues, scaling AI systems, and addressing ethical and societal implications.',
      'Q314. Explain the concept of AI Explainability.',
      'AI Explainability refers to the ability to explain how and why an AI model arrives at a particular decision or prediction. It is crucial for building trust in AI systems, understanding model behavior, and identifying potential biases or errors.',
      'Q315. What is the difference between Supervised Learning and Unsupervised Learning?',
      'Supervised Learning involves training a model using labeled data, where the model learns to map input to output based on example input-output pairs. Unsupervised Learning involves training a model using unlabeled data, where the model learns patterns and structures in the data without explicit input-output pairs.',
      'Q316. Describe the role of AI in Natural Language Generation.',
      'AI in Natural Language Generation involves generating human-like text, speech, or dialogue based on input data or prompts. It is used in applications such as chatbots, virtual assistants, automated content creation, and language translation.',
      'Q317. What are some applications of AI in robotics?',
      'AI in robotics enables autonomous navigation, object recognition and manipulation, path planning, collaborative robots (cobots), human-robot interaction, and task automation in various industries such as manufacturing, healthcare, and logistics.',
      'Q318. Explain the concept of Bias in AI models.',
      'Bias in AI models refers to systematic errors or prejudices in the model\'s predictions or decisions, leading to unfair or discriminatory outcomes. It can arise from biased training data, biased algorithms, or biased interpretations of results.',
      'Q319. How does AI impact the field of cybersecurity?',
      'AI enhances cybersecurity by automating threat detection and response, identifying anomalies in network traffic or user behavior, improving malware detection and prevention, and enabling adaptive and proactive defense mechanisms against cyber threats.',
      'Q320. Describe the concept of Explainable AI (XAI).',
      'Explainable AI (XAI) focuses on making AI systems transparent and understandable to users and stakeholders, providing insights into how decisions are made and facilitating trust, accountability, and ethical considerations in AI applications.',
      // Add more questions and answers as needed
    ],
    'Data Structures and Algorithms': [
      'Q351. What are Data Structures?',
      'Data Structures are containers for organizing and storing data in a computer system. They include arrays, linked lists, stacks, queues, trees, graphs, and hash tables, each optimized for specific operations and usage scenarios.',
      'Q352. Explain the difference between Arrays and Linked Lists.',
      'Arrays are a contiguous block of memory that stores elements of the same data type, accessed using indices. Linked Lists are data structures consisting of nodes, where each node contains data and a reference (pointer) to the next node in the sequence.',
      'Q353. What is the time complexity of Binary Search?',
      'The time complexity of Binary Search is O(log n), where n is the number of elements in the sorted array. It efficiently locates a target value by repeatedly dividing the search interval in half.',
      'Q354. Describe the concept of Recursion in algorithms.',
      'Recursion is a programming technique where a function calls itself directly or indirectly to solve a problem. It involves breaking down a problem into smaller, similar subproblems until a base case is reached.',
      'Q355. What are some common Sorting Algorithms?',
      'Common Sorting Algorithms include Bubble Sort, Selection Sort, Insertion Sort, Merge Sort, Quick Sort, and Heap Sort. Each algorithm has its own complexity, advantages, and optimal use cases for sorting data.',
      'Q356. Explain the concept of Big O notation.',
      'Big O notation is used to describe the asymptotic upper bound or worst-case complexity of an algorithm in terms of time (execution speed) or space (memory usage). It provides insights into how an algorithm scales with input size.',
      'Q357. What is the difference between Depth-First Search (DFS) and Breadth-First Search (BFS)?',
      'Depth-First Search (DFS) explores as far as possible along each branch before backtracking, typically using a stack data structure. Breadth-First Search (BFS) explores neighbors at the present depth level before moving on to nodes at the next depth level, typically using a queue data structure.',
      'Q358. Describe the concept of Dynamic Programming.',
      'Dynamic Programming is a problem-solving technique where complex problems are broken down into simpler overlapping subproblems. It stores results of subproblems to avoid redundant calculations, improving efficiency.',
      'Q359. What is the purpose of Hash Tables in data structures?',
      'Hash Tables are data structures that store key-value pairs, allowing rapid insertion, deletion, and lookup operations. They use a hash function to compute an index into an array (hash table) where the corresponding value is stored.',
      'Q360. Explain the concept of Graph Traversal algorithms.',
      'Graph Traversal algorithms visit each vertex (node) in a graph systematically to perform specific operations, such as finding paths, discovering connected components, or performing topological sorting. Examples include Depth-First Search (DFS) and Breadth-First Search (BFS).',
      'Q361. What are some applications of Binary Trees?',
      'Binary Trees are used in various applications, including representing hierarchical data structures (e.g., file systems, organization charts), implementing binary search trees for efficient searching and sorting, and in data compression algorithms such as Huffman coding.',
      'Q362. Describe the concept of Heaps in data structures.',
      'Heaps are complete binary trees that satisfy the heap property, where each parent node is greater than or equal to (max heap) or less than or equal to (min heap) its child nodes. They are used for implementing priority queues and sorting algorithms.',
      'Q363. How does the Greedy algorithm approach work in solving problems?',
      'The Greedy algorithm approach involves making locally optimal choices at each stage of a problem with the hope of finding a global optimum solution. It does not reconsider past choices and may not always guarantee an optimal solution for every problem.',
      'Q364. What is the role of Divide and Conquer strategy in algorithm design?',
      'Divide and Conquer is an algorithm design paradigm where a problem is divided into smaller subproblems that are solved independently. The solutions to the subproblems are then combined to solve the original problem.',
      'Q365. Describe the concept of Backtracking.',
      'Backtracking is a problem-solving technique that involves exploring all possible solutions to find the correct solution. It systematically searches through all potential candidates for the solution and backtracks when it determines that a candidate cannot lead to a valid solution.',
      'Q366. What are some applications of Dynamic Programming?',
      'Dynamic Programming is used in various applications, including optimizing resource allocation, solving problems with overlapping subproblems (e.g., shortest path problems), sequence alignment (e.g., in bioinformatics), and improving efficiency in algorithm design.',
      'Q367. Explain the concept of Dijkstra\'s algorithm.',
      'Dijkstra\'s algorithm is a graph search algorithm used to find the shortest path from a source vertex to all other vertices in a weighted graph with non-negative edge weights. It uses a priority queue to repeatedly select the vertex with the smallest tentative distance.',
      'Q368. What are the advantages of using a Linked List over an Array?',
      'Advantages of Linked Lists over Arrays include dynamic size (ability to grow and shrink dynamically), efficient insertion and deletion operations (O(1) for inserting/deleting at the beginning with a head pointer), and flexibility in memory allocation (non-contiguous memory).',
      'Q369. Describe the concept of Topological Sorting in graphs.',
      'Topological Sorting is an ordering of vertices in a directed acyclic graph (DAG) such that for every directed edge uv from vertex u to vertex v, u comes before v in the ordering. It is used in task scheduling, job sequencing, and dependency resolution.',
      'Q370. How does the Floyd-Warshall algorithm work?',
      'The Floyd-Warshall algorithm is used to find the shortest paths between all pairs of vertices in a weighted graph with positive or negative edge weights (but no negative cycles). It iteratively updates a distance matrix to reflect the shortest paths between every pair of vertices.',
      // Add more questions and answers as needed
    ],
  };
String _selectedTopic = 'Algorithms'; // Default topic

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Interview Preparation', style: TextStyle(fontFamily: 'Montserrat', fontSize: 18, fontWeight: FontWeight.bold)),
        backgroundColor:  const Color.fromARGB(255, 209, 157, 0),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            DropdownButton(
              value: _selectedTopic,
              onChanged: (value) {
                setState(() {
                  _selectedTopic = value as String;
                });
              },
              items: _content.keys.map((topic) {
                return DropdownMenuItem(
                  value: topic,
                  child: Text(topic),
                );
              }).toList(),
            ),
            const SizedBox(height: 20),
            Expanded(
              child: ListView.builder(
                itemCount: _content[_selectedTopic]?.length?? 0,
                itemBuilder: (context, index) {
                  final contentItem = _content[_selectedTopic]?[index];
                  if (contentItem!= null) {
                    String question = contentItem;
                    String answer = contentItem;
                    bool isQuestion = question.startsWith('Q');
                    return Card(
                      child: Padding(
                        padding: const EdgeInsets.all(16.0),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              question,
                              style: TextStyle(
                                fontWeight: isQuestion? FontWeight.bold : null,
                              ),
                            ),
                            
                            
                          ],
                        ),
                      ),
                    );
                  } else {
                    return Container();
                  }
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}